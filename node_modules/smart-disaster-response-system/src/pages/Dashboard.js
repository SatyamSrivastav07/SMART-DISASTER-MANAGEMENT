import React from 'react';
import { AlertTriangle, Users, Shield, Bell, Activity, Wind, Droplets, Zap, Heart } from 'lucide-react';
import { useSensorData } from '../context/SensorDataContext';
import { useAlerts } from '../context/AlertContext';
import SensorChart from '../components/SensorChart';
import AlertList from '../components/AlertList';
import StatusCard from '../components/StatusCard';
import Mao from '../components/Map';

const Dashboard = () => {
  const { sensorData, isOnline, lastUpdate } = useSensorData();
  const { alerts, getAlertStats } = useAlerts();
  
  const alertStats = getAlertStats();

  const getSeverityColor = (severity) => {
    switch(severity) {
      case 'critical': return 'text-danger-600 bg-danger-100';
      case 'warning': return 'text-warning-600 bg-warning-100';
      case 'moderate': return 'text-warning-600 bg-warning-100';
      default: return 'text-primary-600 bg-primary-100';
    }
  };

  const getSeverityIcon = (type) => {
    switch(type) {
      case 'earthquake': return <Activity className="w-4 h-4" />;
      case 'storm': return <Wind className="w-4 h-4" />;
      case 'flood': return <Droplets className="w-4 h-4" />;
      case 'pollution': return <Zap className="w-4 h-4" />;
      default: return <AlertTriangle className="w-4 h-4" />;
    }
  };

  return (
    <div className="space-y-6">
      {/* Status Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <StatusCard
          title="Active Alerts"
          value={alertStats.active}
          icon={Bell}
          color="blue"
          trend={alertStats.last24h > 5 ? 'up' : 'down'}
          subtitle={`${alertStats.last24h} in last 24h`}
        />
        
        <StatusCard
          title="System Status"
          value={isOnline ? 'Online' : 'Offline'}
          icon={Shield}
          color={isOnline ? 'green' : 'red'}
          subtitle={`Updated ${new Date(lastUpdate).toLocaleTimeString()}`}
        />
        
        <StatusCard
          title="Response Teams"
          value="24"
          icon={Users}
          color="purple"
          subtitle="12 available, 12 deployed"
        />
        
        <StatusCard
          title="Critical Alerts"
          value={alertStats.critical}
          icon={AlertTriangle}
          color={alertStats.critical > 0 ? 'red' : 'green'}
          subtitle={alertStats.critical > 0 ? 'Immediate attention required' : 'All clear'}
        />
      </div>

      {/* Main Dashboard Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Recent Alerts */}
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-lg font-semibold mb-4 flex items-center">
            <AlertTriangle className="w-5 h-5 mr-2 text-danger-500" />
            Recent Alerts
          </h3>
          <AlertList alerts={alerts.slice(0, 5)} showActions={false} />
          {alerts.length === 0 && (
            <div className="text-center py-8">
              <Shield className="w-12 h-12 text-success-500 mx-auto mb-2" />
              <p className="text-gray-500">No active alerts</p>
              <p className="text-sm text-gray-400">All systems operating normally</p>
            </div>
          )}
        </div>

        {/* Live Sensor Data */}
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-lg font-semibold mb-4 flex items-center">
            <Activity className="w-5 h-5 mr-2 text-primary-500" />
            Live Sensor Data
          </h3>
          <div className="space-y-4">
            <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
              <span className="text-sm font-medium flex items-center">
                <Activity className="w-4 h-4 mr-2" />
                Seismic Activity
              </span>
              <span className={`text-sm font-bold ${
                sensorData.seismic?.magnitude > 3 ? 'text-danger-600' : 'text-success-600'
              }`}>
                {sensorData.seismic?.magnitude?.toFixed(1)} magnitude
              </span>
            </div>
            
            <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
              <span className="text-sm font-medium flex items-center">
                <Wind className="w-4 h-4 mr-2" />
                Wind Speed
              </span>
              <span className={`text-sm font-bold ${
                sensorData.weather?.windSpeed > 25 ? 'text-warning-600' : 'text-success-600'
              }`}>
                {sensorData.weather?.windSpeed?.toFixed(1)} km/h
              </span>
            </div>
            
            <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
              <span className="text-sm font-medium flex items-center">
                <Droplets className="w-4 h-4 mr-2" />
                Water Level
              </span>
              <span className={`text-sm font-bold ${
                sensorData.waterLevel?.level > 7 ? 'text-danger-600' : 'text-success-600'
              }`}>
                {sensorData.waterLevel?.level?.toFixed(1)}m
              </span>
            </div>
            
            <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
              <span className="text-sm font-medium flex items-center">
                <Zap className="w-4 h-4 mr-2" />
                Air Quality Index
              </span>
              <span className={`text-sm font-bold ${
                sensorData.airQuality?.aqi > 150 ? 'text-danger-600' : 'text-success-600'
              }`}>
                {sensorData.airQuality?.aqi?.toFixed(0)}
              </span>
            </div>

            <div className="flex justify-between items-center p-3 bg-gray-50 rounded">
              <span className="text-sm font-medium flex items-center">
                <Heart className="w-4 h-4 mr-2" />
                Temperature
              </span>
              <span className="text-sm font-bold text-primary-600">
                {sensorData.weather?.temperature?.toFixed(1)}Â°C
              </span>
            </div>
          </div>
        </div>
      </div>

      {/* Sensor Charts */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-lg font-semibold mb-4">Seismic Activity Trend</h3>
          <SensorChart 
            sensorType="seismic" 
            title="Magnitude over Time"
            color="#ef4444"
          />
        </div>
        
        <div className="bg-white rounded-lg shadow-md p-6">
          <h3 className="text-lg font-semibold mb-4">Air Quality Trend</h3>
          <SensorChart 
            sensorType="airQuality" 
            title="AQI over Time"
            color="#f59e0b"
          />
        </div>
      </div>

      {/* Infrastructure Status */}
      <div className="bg-white rounded-lg shadow-md p-6">
        <h3 className="text-lg font-semibold mb-4">Infrastructure Status</h3>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <div className="text-center">
            <div className="w-16 h-16 mx-auto mb-2 bg-success-100 rounded-full flex items-center justify-center">
              <Zap className="w-8 h-8 text-success-600" />
            </div>
            <h4 className="font-medium">Power Grid</h4>
            <p className="text-2xl font-bold text-success-600">
              {sensorData.infrastructure?.powerGrid?.toFixed(0)}%
            </p>
            <p className="text-sm text-gray-500">Operational</p>
          </div>
          
          <div className="text-center">
            <div className="w-16 h-16 mx-auto mb-2 bg-primary-100 rounded-full flex items-center justify-center">
              <Droplets className="w-8 h-8 text-primary-600" />
            </div>
            <h4 className="font-medium">Water Supply</h4>
            <p className="text-2xl font-bold text-primary-600">
              {sensorData.infrastructure?.waterSupply?.toFixed(0)}%
            </p>
            <p className="text-sm text-gray-500">Normal</p>
          </div>
          
          <div className="text-center">
            <div className="w-16 h-16 mx-auto mb-2 bg-green-100 rounded-full flex items-center justify-center">
              <Activity className="w-8 h-8 text-green-600" />
            </div>
            <h4 className="font-medium">Communication</h4>
            <p className="text-2xl font-bold text-green-600">
              {sensorData.infrastructure?.communication?.toFixed(0)}%
            </p>
            <p className="text-sm text-gray-500">Excellent</p>
          </div>
          
          <div className="text-center">
            <div className="w-16 h-16 mx-auto mb-2 bg-orange-100 rounded-full flex items-center justify-center">
              <Users className="w-8 h-8 text-orange-600" />
            </div>
            <h4 className="font-medium">Transportation</h4>
            <p className="text-2xl font-bold text-orange-600">
              {sensorData.infrastructure?.transportation?.toFixed(0)}%
            </p>
            <p className="text-sm text-gray-500">Moderate</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;